#
# Generic qmake configuration for building with g++ on arm devices.
#
# A minimal configure line could look something like this:
# ./configure -device arm-generic-g++ -device-option CROSS_COMPILE=arm-linux-gnueabi-

include(../common/linux_device_pre.conf)

ARCH = -march=armv8-a+crc+crypto -mtune=cortex-a57 -mtp=soft -fPIE
QMAKE_CFLAGS = $$ARCH -ffunction-sections $$ARCH
QMAKE_CXXFLAGS = $$QMAKE_CFLAGS
QMAKE_LFLAGS = -specs=$$(DEVKITPRO)/libnx/switch.specs $$ARCH
QMAKE_LFLAGS_DEBUG = -Wl,-Og

QMAKE_PLATFORM          = unix posix switch

#QMAKE_INCDIR            = $$(DEVKITPRO)/libnx/include
QMAKE_CFLAGS          += -isystem $$(DEVKITPRO)/libnx/include
QMAKE_CXXFLAGS          += -isystem $$(DEVKITPRO)/libnx/include

QMAKE_LIBDIR            = $$(DEVKITPRO)/libnx/lib

QMAKE_INCDIR_OPENGL_ES2 = $$(DEVKITPRO)/portlibs/switch/include
QMAKE_LIBDIR_OPENGL_ES2 = $$(DEVKITPRO)/portlibs/switch/lib

QMAKE_LIBS              = -lnx
QMAKE_LIBS_OPENGL_ES2   = -lEGL -lGLESv2 -lglapi -ldrm_nouveau

QMAKE_INCDIR_OPENGL = $$QMAKE_INCDIR_OPENGL_ES2
QMAKE_LIBDIR_OPENGL = $$QMAKE_LIBDIR_OPENGL_ES2
QMAKE_LIBS_OPENGL = $$QMAKE_LIBS_OPENGL_ES2

DEFINES += __SWITCH__ _GNU_SOURCE

include(../common/linux_device_post.conf)
load(qt_config)


